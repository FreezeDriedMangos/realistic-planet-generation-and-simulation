var letters = letters = {
   'A': [
   [, 1],
   [1, , 1],
   [1, , 1],
   [1, 1, 1],
   [1, , 1]
   ],
   'B': [
   [1, 1],
   [1, , 1],
   [1, 1, 1],
   [1, , 1],
   [1, 1]
   ],
   'C': [
   [1, 1, 1],
   [1],
   [1],
   [1],
   [1, 1, 1]
   ],
   'D': [
   [1, 1],
   [1, , 1],
   [1, , 1],
   [1, , 1],
   [1, 1]
   ],
   'E': [
   [1, 1, 1],
   [1],
   [1, 1, 1],
   [1],
   [1, 1, 1]
   ],
   'F': [
   [1, 1, 1],
   [1],
   [1, 1],
   [1],
   [1]
   ],
   'G': [
   [, 1, 1],
   [1],
   [1, , 1, 1],
   [1, , , 1],
   [, 1, 1]
   ],
   'H': [
   [1, , 1],
   [1, , 1],
   [1, 1, 1],
   [1, , 1],
   [1, , 1]
   ],
   'I': [
   [1, 1, 1],
   [, 1],
   [, 1],
   [, 1],
   [1, 1, 1]
   ],
   'J': [
   [1, 1, 1],
   [, , 1],
   [, , 1],
   [1, , 1],
   [1, 1, 1]
   ],
   'K': [
   [1, , , 1],
   [1, , 1],
   [1, 1],
   [1, , 1],
   [1, , , 1]
   ],
   'L': [
   [1],
   [1],
   [1],
   [1],
   [1, 1, 1]
   ],
   'M': [
   [1, 1, 1, 1, 1],
   [1, , 1, , 1],
   [1, , 1, , 1],
   [1, , , , 1],
   [1, , , , 1]
   ],
   'N': [
   [1, , , 1],
   [1, 1, , 1],
   [1, , 1, 1],
   [1, , , 1],
   [1, , , 1]
   ],
   'O': [
   [1, 1, 1],
   [1, , 1],
   [1, , 1],
   [1, , 1],
   [1, 1, 1]
   ],
   'P': [
   [1, 1, 1],
   [1, , 1],
   [1, 1, 1],
   [1],
   [1]
   ],
   'Q': [
   [0, 1, 1],
   [1, , , 1],
   [1, , , 1],
   [1, , 1, 1],
   [1, 1, 1, 1]
   ],
   'R': [
   [1, 1],
   [1, , 1],
   [1, , 1],
   [1, 1],
   [1, , 1]
   ],
   'S': [
   [1, 1, 1],
   [1],
   [1, 1, 1],
   [, , 1],
   [1, 1, 1]
   ],
   'T': [
   [1, 1, 1],
   [, 1],
   [, 1],
   [, 1],
   [, 1]
   ],
   'U': [
   [1, , 1],
   [1, , 1],
   [1, , 1],
   [1, , 1],
   [1, 1, 1]
   ],
   'V': [
   [1, , , , 1],
   [1, , , , 1],
   [, 1, , 1],
   [, 1, , 1],
   [, , 1]
   ],
   'W': [
   [1, , , , 1],
   [1, , , , 1],
   [1, , , , 1],
   [1, , 1, , 1],
   [1, 1, 1, 1, 1]
   ],
   'X': [
   [1, , , , 1],
   [, 1, , 1],
   [, , 1],
   [, 1, , 1],
   [1, , , , 1]
   ],
   'Y': [
   [1, , 1],
   [1, , 1],
   [, 1],
   [, 1],
   [, 1]
   ],
   'Z': [
   [1, 1, 1, 1, 1],
   [, , , 1],
   [, , 1],
   [, 1],
   [1, 1, 1, 1, 1]
   ],
   '0': [
   [1, 1, 1],
   [1, , 1],
   [1, , 1],
   [1, , 1],
   [1, 1, 1]
   ],
   '1': [
   [, 1],
   [, 1],
   [, 1],
   [, 1],
   [, 1]
   ],
   '2': [
   [1,1,1],
   [0,0,1],
   [1,1,1],
   [1,0,0],
   [1,1,1]
   ],
   '3':[
   [1,1,1],
   [0,0,1],
   [1,1,1],
   [0,0,1],
   [1,1,1]
   ],
   '4':[
   [1,0,1],
   [1,0,1],
   [1,1,1],
   [0,0,1],
   [0,0,1]
   ],
   '5':[
   [1,1,1],
   [1,0,0],
   [1,1,1],
   [0,0,1],
   [1,1,1]
   ],
   '6':[
   [1,1,1],
   [1,0,0],
   [1,1,1],
   [1,0,1],
   [1,1,1]
   ],
   '7':[
   [1,1,1],
   [0,0,1],
   [0,0,1],
   [0,0,1],
   [0,0,1]
   ],
   '8':[
   [1,1,1],
   [1,0,1],
   [1,1,1],
   [1,0,1],
   [1,1,1]
   ],
   '9':[
   [1,1,1],
   [1,0,1],
   [1,1,1],
   [0,0,1],
   [1,1,1]
   ],
   ' ': [
   [, ,],
   [, ,],
   [, ,],
   [, ,],
   [, ,]
   ],
   
'_': [
   [],
   [],
   [],
   [],
   [1,1,1]
   ],

   '.': [
   [],
   [],
   [],
   [],
   [1]
   ],
"'": [
   [1],
   [1],
   [],
   [],
   []
   ],
'"': [
   [1,,1],
   [1,,1],
   [],
   [],
   []
   ],

   ',': [
   [, ],
   [, ],
   [, ],
   [,1],
   [1,]
   ],
   
   '?': [
   [,1,1],
   [, ,1],
   [,1,],
   [, ,],
   [,1,]
   ],
   
   '!':[
   [1],
   [1],
   [1],
   [0],
   [1]
   ],
   
   ']':[
   [1,1],
   [0,1],
   [0,1],
   [0,1],
   [1,1]
   ],
   '[':[
   [1, 1],
   [1],
   [1],
   [1],
   [1, 1]
   ],
   ')':[
   [1],
   [0,1],
   [0,1],
   [0,1],
   [1]
   ],
   '(':[
   [, 1],
   [1],
   [1],
   [1],
   [, 1]
   ],
   '}':[
   [1,1],
   [0,1],
   [0,0,1],
   [0,1],
   [1,1]
   ],
   '{':[
   [0, 1, 1],
   [0, 1],
   [1],
   [0, 1],
   [0, 1, 1]
   ],
   
   ':':[
   [0],
   [1],
   [0],
   [1],
   [0]
   ],
   ';':[
   [0,0],
   [0,1],
   [0,0],
   [0,1],
   [1,0]
   ],
   ';':[
   [0],
   [1],
   [0],
   [1],
   [1]
   ],
   
   '=':[
   [0],
   [1,1],
   [0],
   [1,1],
   [0]
   ],
   '-':[
   [0],
   [0],
   [1,1],
   [0],
   [0]
   ],
   '>':[
   [0],
   [1],
   [0,1],
   [1],
   [0]
   ],
   '<':[
   [0],
   [0,1],
   [1],
   [0,1],
   [0]
   ],
   
   'no': [
   [1,1,],
   [1, ,],
   [,1,],
   [,,],
   [,1,]
   ],
};

function drawText(string, sx, sy, size = 15, borderThickness = 1) {
   sx += borderThickness
   sy += borderThickness
   
   noStroke()
fill(255)
   pdrawText(string, sx, sy, size, borderThickness*2, 255)
   noStroke()
fill(0)
   pdrawText(string, sx, sy, size, 0)
}

function pdrawText(string, sx, sy, size = 15, extraSize = 0, fillC = 0) {
   size /= 5
   let needed = [];
   upperString = string.toUpperCase(); // because I only did uppercase letters
   for (let i = 0; i < string.length; i++) {
      let letter = letters[upperString.charAt(i)];
      if (letter) { 
         // because there's letters I didn't do
         needed.push(letter);
      } else {
         needed.push(letters["no"]);
      }
   }

let regularSize = size 
   
   
   let currX = 0;
   for (i = 0; i < needed.length; i++) {
      if(string.charAt(i) === string.charAt(i).toUpperCase()) {
         //fill(fillC)
size = regularSize
      } else {
         //fill(fillC + 100)
size = regularSize*(3/4)
      }
      
      
      let letter = needed[i];
      let currY = 0;
      let addX = 0;
      
      for (let y = 0; y < letter.length; y++) {
         let row = letter[y];
         for (let x = 0; x < row.length; x++) {
            if (row[x]) {
               rect(sx + currX + x * size - extraSize/2, letter.length*(regularSize-size) + sy + currY - extraSize/2, size + extraSize, size + extraSize);
            }
         }
         addX = Math.max(addX, row.length * size);
         currY += size;
      }
      currX += size + addX;
   }
}